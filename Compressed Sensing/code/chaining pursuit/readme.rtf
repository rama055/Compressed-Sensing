{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica;\f1\fmodern\fcharset77 Courier;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh9000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\fs24 \cf0 Matlab code for Chaining Pursuit\
\
Joel A. Tropp\
Department of Mathematics\
The University of Michigan at Ann Arbor\
\
E-mail: jtropp@umich.edu\
Web: http://www.umich.edu/~jtropp/\
\
Date: 15 November 2005\
Copyright 2005\
\
* * * * *\
\
Legal notice: This code is in the public domain, but the author retains the copyright. This code may be modified and distributed freely, provided that this file is included in the distribution.\
\
* * * * *\
\
This archive contains four Matlab files, which implement a variant of the Chaining Pursuit algorithm described in\
\
A. C. Gilbert, M. J. Strauss, J. A. Tropp, and R. Vershynin. "Sublinear, small-space approximation of compressible signals and uniform algorithmic embeddings," submitted for publication, November 2005.\
\
This implementation has been tested with Matlab 7.0.1. It may not work with earlier versions.\
\
* * * * *\
\

\f1 example
\f0 \
\
This function offers two short demonstrations of Chaining Pursuit.\
\
* * * * *\
\

\f1 Phi = GenerateMeasurements( d, N, T )
\f0 \
\
This function generates a random measurement system for signals of length 
\f1 d
\f0 . The other two parameters are the number 
\f1 N
\f0  of measurements per trial and the number 
\f1 T
\f0  of trials.\
\
The total number of measurements made will be NT (ceil( log_2 d ) + 1). Theoretically, if m is the number of spikes that we wish to recover, then N = O(m) and T = O( log m log d ).\
\
* * * * *\
\

\f1 V = EncodeSignal( s, Phi )
\f0 \
\
Uses the measurement system 
\f1 Phi
\f0  to encode a signal s of length 
\f1 d
\f0  for recovery via Chaining Pursuit. The output 
\f1 V
\f0  is a cell array, suitable for input to 
\f1 ChainingPursuit
\f0 .\
\
* * * * *\
\

\f1 hat = ChainingPursuit( m, V, Phi )
\f0 \
\
Attempts to use the Chaining Pursuit algorithm to recover 
\f1 m
\f0  spikes, given the data 
\f1 V
\f0  and the measurement system 
\f1 Phi
\f0 . Outputs a sparse vector 
\f1 hat
\f0  of length 
\f1 d
\f0  with the estimated locations and values of O(m) spikes.\
\
This algorithm has two other parameters that are set in the source file:\
\

\f1 rho
\f0  is the factor decrease in the number of spikes sought in successive passes. Initially set to 4.\
\

\f1 majority
\f0  is the fraction of trials in which a spike must appear for the algorithm to identify it. Initially set to 2/3.}